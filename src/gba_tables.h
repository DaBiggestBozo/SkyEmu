
// Copyright Skyler Saleh
// 
// Autogenerated decoding tables. Do not modify by hand. 

#ifndef GBA_TABLES_H
#define GBA_TABLES_H 1
#include "arm7tdmi_instr.h"

// internal opcode = {arm_op[27:20],arm_op[7:0}
static inline int gba_intern_op(uint32_t arm_op){  static const uint16_t conv_intern_op[]={
    15, 16, 15, 16, 15, 16, 15, 16, 15, 103, 15, 90, 15, 111, 15, 111,
    15, 16, 15, 16, 15, 16, 15, 16, 15, 103, 15, 78, 15, 81, 15, 84,
    27, 28, 27, 28, 27, 28, 27, 28, 27, 102, 27, 90, 27, 111, 27, 111,
    27, 28, 27, 28, 27, 28, 27, 28, 27, 102, 27, 78, 27, 81, 27, 84,
    48, 49, 48, 49, 48, 49, 48, 49, 48, 111, 48, 89, 48, 111, 48, 111,
    48, 49, 48, 49, 48, 49, 48, 49, 48, 111, 48, 76, 48, 80, 48, 83,
    39, 40, 39, 40, 39, 40, 39, 40, 39, 111, 39, 89, 39, 111, 39, 111,
    39, 40, 39, 40, 39, 40, 39, 40, 39, 111, 39, 76, 39, 80, 39, 83,
    12, 13, 12, 13, 12, 13, 12, 13, 12, 107, 12, 90, 12, 111, 12, 111,
    12, 13, 12, 13, 12, 13, 12, 13, 12, 107, 12, 78, 12, 81, 12, 84,
    9, 10, 9, 10, 9, 10, 9, 10, 9, 106, 9, 90, 9, 111, 9, 111,
    9, 10, 9, 10, 9, 10, 9, 10, 9, 106, 9, 78, 9, 81, 9, 84,
    45, 46, 45, 46, 45, 46, 45, 46, 45, 105, 45, 89, 45, 111, 45, 111,
    45, 46, 45, 46, 45, 46, 45, 46, 45, 105, 45, 76, 45, 80, 45, 83,
    42, 43, 42, 43, 42, 43, 42, 43, 42, 104, 42, 89, 42, 111, 42, 111,
    42, 43, 42, 43, 42, 43, 42, 43, 42, 104, 42, 76, 42, 80, 42, 83,
    108, 111, 111, 111, 111, 111, 111, 111, 111, 60, 111, 90, 111, 111, 111, 111,
    54, 55, 54, 55, 54, 55, 54, 55, 54, 111, 54, 78, 54, 81, 54, 84,
    110, 2, 109, 109, 109, 109, 109, 109, 109, 109, 109, 90, 109, 109, 109, 109,
    51, 52, 51, 52, 51, 52, 51, 52, 51, 111, 51, 78, 51, 81, 51, 84,
    108, 111, 111, 111, 111, 111, 111, 111, 111, 61, 111, 89, 111, 111, 111, 111,
    24, 25, 24, 25, 24, 25, 24, 25, 24, 111, 24, 76, 24, 79, 24, 82,
    110, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 89, 109, 109, 109, 109,
    21, 22, 21, 22, 21, 22, 21, 22, 21, 111, 21, 76, 21, 80, 21, 83,
    36, 37, 36, 37, 36, 37, 36, 37, 36, 111, 36, 90, 36, 111, 36, 111,
    36, 37, 36, 37, 36, 37, 36, 37, 36, 111, 36, 78, 36, 81, 36, 84,
    30, 31, 30, 31, 30, 31, 30, 31, 30, 111, 30, 90, 30, 111, 30, 111,
    30, 31, 30, 31, 30, 31, 30, 31, 30, 111, 30, 78, 30, 81, 30, 84,
    18, 19, 18, 19, 18, 19, 18, 19, 18, 111, 18, 89, 18, 111, 18, 111,
    18, 19, 18, 19, 18, 19, 18, 19, 18, 111, 18, 76, 18, 79, 18, 82,
    33, 34, 33, 34, 33, 34, 33, 34, 33, 111, 33, 89, 33, 111, 33, 111,
    33, 34, 33, 34, 33, 34, 33, 34, 33, 111, 33, 76, 33, 80, 33, 83,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
    26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
    47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
    47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
    38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
    38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
    44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
    41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
    41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
    59, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
    50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
    110, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
    35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
    35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
    68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
    68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
    85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
    71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
    87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
    74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111,
    65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111,
    67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111,
    63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111, 69, 111,
    65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111, 65, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111,
    67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111, 67, 111,
    63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111, 63, 111,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111, 86, 111,
    72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111, 72, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111,
    88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111, 88, 111,
    75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 111, 75, 57,
    98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
    92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
    98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
    92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
    101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
    95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
    97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
    91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
    97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
    91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
    101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
    95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
    99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
    93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
    99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
    93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
    101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
    95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
    100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
    94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
    100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
    94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
    101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
    95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
    111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
    96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
    3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
  };

  return conv_intern_op[((arm_op>>4)&0xf) | (((arm_op>>20)&0xff)<<4)];
}
// Table to map interal opcodes to pneumonics
static const char * gba_disasm_name[]={
  "B", "BL", "BX", "CDP", "LDC", "MCR", "MRC", "STC",
  "ADC (imm)", "ADC (reg)", "ADC (rsr)", "ADD (imm)", "ADD (reg)", "ADD (rsr)", "AND (imm)", "AND (reg)",
  "AND (rsr)", "BIC (imm)", "BIC (reg)", "BIC (rsr)", "CMN (imm)", "CMN (reg)", "CMN (rsr)", "CMP (imm)",
  "CMP (reg)", "CMP (rsr)", "EOR (imm)", "EOR (reg)", "EOR (rsr)", "MOV (imm)", "MOV (reg)", "MOV (rsr)",
  "MVN (imm)", "MVN (reg)", "MVN (rsr)", "ORR (imm)", "ORR (reg)", "ORR (rsr)", "RSB (imm)", "RSB (reg)",
  "RSB (rsr)", "RSC (imm)", "RSC (reg)", "RSC (rsr)", "SBC (imm)", "SBC (reg)", "SBC (rsr)", "SUB (imm)",
  "SUB (reg)", "SUB (rsr)", "TEQ (imm)", "TEQ (reg)", "TEQ (rsr)", "TST (imm)", "TST (reg)", "TST (rsr)",
  "SVC", "UDF", "Reserved Hint", "Reserved Hint", "SWP", "SWPB", "LDRBT (A1)", "LDRBT (A2)",
  "LDRT (A1)", "LDRT (A2)", "STRBT (A1)", "STRBT (A2)", "STRT (A1)", "STRT (A2)", "LDR (lit)", "LDR (imm)",
  "LDR (reg)", "LDRB (lit)", "LDRB (imm)", "LDRB (reg)", "LDRH (lit)", "LDRH (imm)", "LDRH (reg)", "LDRSB (lit)",
  "LDRSB (imm)", "LDRSB (reg)", "LDRSH (lit)", "LDRSH (imm)", "LDRSH (reg)", "STR (imm)", "STR (reg)", "STRB (imm)",
  "STRB (reg)", "STRH (imm)", "STRH (reg)", "LDM", "LDMDA", "LDMDB", "LDMIB", "LDM (usr reg)",
  "LDM (exce ret)", "STM", "STMDA", "STMDB", "STMIB", "STM (usr reg)", "MLA", "MUL",
  "SMLAL", "SMULL", "UMLAL", "UMULL", "MRS", "MSR (imm)", "MSR (reg)", "UNKWN",
};

typedef struct { struct{uint8_t name, start, size;} params[10];} arm7tdmi_param_t;
const static arm7tdmi_param_t arm7tdmi_params[]={

  {{{'v',0,24},{'\0',0,0},}},
  {{{'v',0,24},{'\0',0,0},}},
  {{{'m',0,4},{'\0',0,0},}},
  {{{'M',0,4},{'I',5,3},{'p',8,4},{'D',12,4},{'N',16,4},{'o',20,4},{'\0',0,0},}},
  {{{'v',0,8},{'p',8,4},{'D',12,4},{'n',16,4},{'w',21,1},{'d',22,1},{'u',23,1},{'P',24,1},{'\0',0,0},}},
  {{{'M',0,4},{'I',5,3},{'p',8,4},{'t',12,4},{'N',16,4},{'o',21,3},{'\0',0,0},}},
  {{{'M',0,4},{'I',5,3},{'p',8,4},{'t',12,4},{'N',16,4},{'o',21,3},{'\0',0,0},}},
  {{{'v',0,8},{'p',8,4},{'D',12,4},{'n',16,4},{'w',21,1},{'d',22,1},{'u',23,1},{'P',24,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'d',12,4},{'n',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'n',16,4},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'s',8,4},{'n',16,4},{'\0',0,0},}},
  {{{'v',0,24},{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'u',0,4},{'t',12,4},{'n',16,4},{'\0',0,0},}},
  {{{'u',0,4},{'t',12,4},{'n',16,4},{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'u',23,1},{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'u',23,1},{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'u',23,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'u',23,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,12},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'r',5,2},{'v',7,5},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'v',0,4},{'V',8,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'m',0,4},{'t',12,4},{'n',16,4},{'w',21,1},{'u',23,1},{'p',24,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'x',0,16},{'n',16,4},{'w',21,1},{'\0',0,0},}},
  {{{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'a',12,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'a',12,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'a',12,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'a',12,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',8,4},{'a',12,4},{'d',16,4},{'S',20,1},{'\0',0,0},}},
  {{{'d',12,4},{'P',22,1},{'\0',0,0},}},
  {{{'v',0,8},{'r',8,4},{'m',16,4},{'P',22,1},{'I',25,1},{'\0',0,0},}},
  {{{'n',0,4},{'m',16,4},{'P',22,1},{'I',25,1},{'\0',0,0},}},
  {{{'\0',0,0},}},
};

void gba_execute_instr(gba_t* gba, uint32_t opcode){

  int intern_op = gba_intern_op(opcode);
  switch(intern_op){
    case 0: arm7tdmi_B(gba, opcode);break;
    case 1: arm7tdmi_BL(gba, opcode);break;
    case 2: arm7tdmi_BX(gba, opcode);break;
    case 3: arm7tdmi_CDP(gba, opcode);break;
    case 4: arm7tdmi_LDC(gba, opcode);break;
    case 5: arm7tdmi_MCR(gba, opcode);break;
    case 6: arm7tdmi_MRC(gba, opcode);break;
    case 7: arm7tdmi_STC(gba, opcode);break;
    case 8: arm7tdmi_ADC_imm(gba, opcode);break;
    case 9: arm7tdmi_ADC_reg(gba, opcode);break;
    case 10: arm7tdmi_ADC_rsr(gba, opcode);break;
    case 11: arm7tdmi_ADD_imm(gba, opcode);break;
    case 12: arm7tdmi_ADD_reg(gba, opcode);break;
    case 13: arm7tdmi_ADD_rsr(gba, opcode);break;
    case 14: arm7tdmi_AND_imm(gba, opcode);break;
    case 15: arm7tdmi_AND_reg(gba, opcode);break;
    case 16: arm7tdmi_AND_rsr(gba, opcode);break;
    case 17: arm7tdmi_BIC_imm(gba, opcode);break;
    case 18: arm7tdmi_BIC_reg(gba, opcode);break;
    case 19: arm7tdmi_BIC_rsr(gba, opcode);break;
    case 20: arm7tdmi_CMN_imm(gba, opcode);break;
    case 21: arm7tdmi_CMN_reg(gba, opcode);break;
    case 22: arm7tdmi_CMN_rsr(gba, opcode);break;
    case 23: arm7tdmi_CMP_imm(gba, opcode);break;
    case 24: arm7tdmi_CMP_reg(gba, opcode);break;
    case 25: arm7tdmi_CMP_rsr(gba, opcode);break;
    case 26: arm7tdmi_EOR_imm(gba, opcode);break;
    case 27: arm7tdmi_EOR_reg(gba, opcode);break;
    case 28: arm7tdmi_EOR_rsr(gba, opcode);break;
    case 29: arm7tdmi_MOV_imm(gba, opcode);break;
    case 30: arm7tdmi_MOV_reg(gba, opcode);break;
    case 31: arm7tdmi_MOV_rsr(gba, opcode);break;
    case 32: arm7tdmi_MVN_imm(gba, opcode);break;
    case 33: arm7tdmi_MVN_reg(gba, opcode);break;
    case 34: arm7tdmi_MVN_rsr(gba, opcode);break;
    case 35: arm7tdmi_ORR_imm(gba, opcode);break;
    case 36: arm7tdmi_ORR_reg(gba, opcode);break;
    case 37: arm7tdmi_ORR_rsr(gba, opcode);break;
    case 38: arm7tdmi_RSB_imm(gba, opcode);break;
    case 39: arm7tdmi_RSB_reg(gba, opcode);break;
    case 40: arm7tdmi_RSB_rsr(gba, opcode);break;
    case 41: arm7tdmi_RSC_imm(gba, opcode);break;
    case 42: arm7tdmi_RSC_reg(gba, opcode);break;
    case 43: arm7tdmi_RSC_rsr(gba, opcode);break;
    case 44: arm7tdmi_SBC_imm(gba, opcode);break;
    case 45: arm7tdmi_SBC_reg(gba, opcode);break;
    case 46: arm7tdmi_SBC_rsr(gba, opcode);break;
    case 47: arm7tdmi_SUB_imm(gba, opcode);break;
    case 48: arm7tdmi_SUB_reg(gba, opcode);break;
    case 49: arm7tdmi_SUB_rsr(gba, opcode);break;
    case 50: arm7tdmi_TEQ_imm(gba, opcode);break;
    case 51: arm7tdmi_TEQ_reg(gba, opcode);break;
    case 52: arm7tdmi_TEQ_rsr(gba, opcode);break;
    case 53: arm7tdmi_TST_imm(gba, opcode);break;
    case 54: arm7tdmi_TST_reg(gba, opcode);break;
    case 55: arm7tdmi_TST_rsr(gba, opcode);break;
    case 56: arm7tdmi_SVC(gba, opcode);break;
    case 57: arm7tdmi_UDF(gba, opcode);break;
    case 58: arm7tdmi_NOP(gba, opcode);break;
    case 59: arm7tdmi_NOP(gba, opcode);break;
    case 60: arm7tdmi_SWP(gba, opcode);break;
    case 61: arm7tdmi_SWPB(gba, opcode);break;
    case 62: arm7tdmi_LDRBT(gba, opcode);break;
    case 63: arm7tdmi_LDRBT(gba, opcode);break;
    case 64: arm7tdmi_LDRT(gba, opcode);break;
    case 65: arm7tdmi_LDRT(gba, opcode);break;
    case 66: arm7tdmi_STRBT(gba, opcode);break;
    case 67: arm7tdmi_STRBT(gba, opcode);break;
    case 68: arm7tdmi_STRT(gba, opcode);break;
    case 69: arm7tdmi_STRT(gba, opcode);break;
    case 70: arm7tdmi_LDR_lit(gba, opcode);break;
    case 71: arm7tdmi_LDR_imm(gba, opcode);break;
    case 72: arm7tdmi_LDR_reg(gba, opcode);break;
    case 73: arm7tdmi_LDRB_lit(gba, opcode);break;
    case 74: arm7tdmi_LDRB_imm(gba, opcode);break;
    case 75: arm7tdmi_LDRB_reg(gba, opcode);break;
    case 76: arm7tdmi_LDRH_lit(gba, opcode);break;
    case 77: arm7tdmi_LDRH_imm(gba, opcode);break;
    case 78: arm7tdmi_LDRH_reg(gba, opcode);break;
    case 79: arm7tdmi_LDRSB_lit(gba, opcode);break;
    case 80: arm7tdmi_LDRSB_imm(gba, opcode);break;
    case 81: arm7tdmi_LDRSB_reg(gba, opcode);break;
    case 82: arm7tdmi_LDRSH_lit(gba, opcode);break;
    case 83: arm7tdmi_LDRSH_imm(gba, opcode);break;
    case 84: arm7tdmi_LDRSH_reg(gba, opcode);break;
    case 85: arm7tdmi_STR_imm(gba, opcode);break;
    case 86: arm7tdmi_STR_reg(gba, opcode);break;
    case 87: arm7tdmi_STRB_imm(gba, opcode);break;
    case 88: arm7tdmi_STRB_reg(gba, opcode);break;
    case 89: arm7tdmi_STRH_imm(gba, opcode);break;
    case 90: arm7tdmi_STRH_reg(gba, opcode);break;
    case 91: arm7tdmi_LDM(gba, opcode);break;
    case 92: arm7tdmi_LDMDA(gba, opcode);break;
    case 93: arm7tdmi_LDMDB(gba, opcode);break;
    case 94: arm7tdmi_LDMIB(gba, opcode);break;
    case 95: arm7tdmi_LDM_usr(gba, opcode);break;
    case 96: arm7tdmi_LDM_eret(gba, opcode);break;
    case 97: arm7tdmi_STM(gba, opcode);break;
    case 98: arm7tdmi_STMDA(gba, opcode);break;
    case 99: arm7tdmi_STMDB(gba, opcode);break;
    case 100: arm7tdmi_STMIB(gba, opcode);break;
    case 101: arm7tdmi_STM_usr(gba, opcode);break;
    case 102: arm7tdmi_MLA(gba, opcode);break;
    case 103: arm7tdmi_MUL(gba, opcode);break;
    case 104: arm7tdmi_SMLAL(gba, opcode);break;
    case 105: arm7tdmi_SMULL(gba, opcode);break;
    case 106: arm7tdmi_UMLAL(gba, opcode);break;
    case 107: arm7tdmi_UMULL(gba, opcode);break;
    case 108: arm7tdmi_MRS(gba, opcode);break;
    case 109: arm7tdmi_MSR_imm(gba, opcode);break;
    case 110: arm7tdmi_MSR_reg(gba, opcode);break;
    case 111: arm7tdmi_unknown(gba, opcode);break;

  };
}
#endif
